% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rnormRast.r
\name{rnormRast,GRaster-method}
\alias{rnormRast,GRaster-method}
\alias{rnormRast}
\title{Create a raster with random values drawn from a normal distribution}
\usage{
\S4method{rnormRast}{GRaster}(x, n = 1, mu = 0, sigma = 1, seed = NULL)
}
\arguments{
\item{x}{A \code{GRaster}: The output will have the same extent and dimensions as this raster.}

\item{n}{An integer: Number of rasters to generate.}

\item{mu, sigma}{Numeric: Mean and sample standard deviation of output. If creating more than one raster, you can provide one value per raster. If there are fewer, they will be recycled.}

\item{seed}{Numeric integer or \code{NULL}: Random seed. If \code{NULL}, then a random seed is used for each raster. If provided, there should be one seed value per raster.}
}
\value{
A \code{GRaster}.
}
\description{
\code{rnormRast()} creates a raster with values drawn from a normal distribution.
}
\examples{
if (grassStarted()) {

# Setup
library(sf)
library(terra)

# Elevation raster
madElev <- fastData("madElev")

# Convert a SpatRaster to a GRaster:
elev <- fast(madElev)

# Create a raster with values drawn from a uniform distribution:
unif <- runifRast(elev)
plot(unif)

unifs <- runifRast(elev, 2, -1, 1)
plot(unifs)

# Create a raster with values drawn from a normal distribution:
norms <- rnormRast(elev, n = 2, mu = c(5, 10), sigma = c(2, 1))
plot(norms)

ns <- rast(norms)
hist(ns[[1]], breaks = 100)

# Create a raster with random, seemingly normally-distributed values:
rand <- spDepRast(elev)
plot(rand)

# Values appear normal on first inspection:
r <- rast(rand)
hist(r)

# ... but actually are patterned:
hist(r, breaks = 100)

# Create a raster with random, normally-distributed values with
# spatial dependence. This can take a few minutes.
spatDep <- spDepRast(elev, dist = 3000)
plot(spatDep)

# Create a fractal raster:
fractal <- fractalRast(elev, n = 2, dimension = c(2.1, 2.8))
plot(fractal)

}
}
\seealso{
\code{\link[=spDepRast]{spDepRast()}}, \code{\link[=fractalRast]{fractalRast()}}, \code{\link[=runifRast]{runifRast()}}, and \strong{GRASS} module \code{r.random.surface}
}
