% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dim.r
\name{dim,GRaster-method}
\alias{dim,GRaster-method}
\alias{dim}
\alias{nrow,GRaster-method}
\alias{nrow}
\alias{ncol,GRaster-method}
\alias{ncol}
\alias{ndepth,GRaster-method}
\alias{ndepth}
\alias{ncell,GRaster-method}
\alias{ncell}
\alias{ncell3d,GRaster-method}
\alias{ncell3d}
\alias{dim,GVector-method}
\alias{nrow,GVector-method}
\alias{ncol,GVector-method}
\alias{nlyr,GSpatial-method}
\alias{nlyr}
\title{Number of rows, columns, depths, cells, and layers of a GRaster}
\usage{
\S4method{dim}{GRaster}(x)

\S4method{nrow}{GRaster}(x)

\S4method{ncol}{GRaster}(x)

\S4method{ndepth}{GRaster}(x)

\S4method{ncell}{GRaster}(x)

\S4method{ncell3d}{GRaster}(x)

\S4method{dim}{GVector}(x)

\S4method{nrow}{GVector}(x)

\S4method{ncol}{GVector}(x)

\S4method{nlyr}{GSpatial}(x)
}
\arguments{
\item{x}{A \code{GRaster} or \code{GVector}.}
}
\value{
A numeric value or vector.
}
\description{
For \code{GRaster}s: Number of rows, columns, depths, cells, and layers:
\itemize{
\item \code{dim()}: Rows, columns, depths, and layers of a
\item \code{nrow()}: Rows
\item \code{ncol()}: Columns
\item \code{ndepth()}: Depths (for 3-dimensional rasters only)
\item \code{nlyr()}: Layers (number of rasters or vectors). Note that for vectors, this does not count "geometries" (features), but rather independent vectors which are composed of one or more geometries (i.e., points, lines, polygons).
\item \code{ncell()}: Number of cells (2 dimensions)
\item \code{ncell3d()}: Number of cells (3 dimensions)
For \code{GVector}s: Number of geometries and fields (columns):
\item \code{dim()}: Number of geometries and fields
\item \code{nrow()}: Number of geometries
\item \code{ncol()}: Number of fields
}
}
\examples{
\dontrun{
# NB This example is in a "dontrun{}" block because it requires users to have
# GRASS GIS Version 8+ installed on their system.

# IMPORTANT #1: If you already have a GRASS session started, you will need to
# run the line below and the last line in this example to work with it again.
# If you have not started a GRASS session, you can skip this step and go to
# step #2.

# IMPORTANT #2: Select the appropriate line below and change as necessary to
# where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.2.app/Contents/Resources" # Mac
grassDir <- 'C:/Program Files/GRASS GIS 8.2' # Windows
grassDir <- '/usr/local/grass' # Linux

# setup
library(sf)
library(terra)

# example data
madElev <- fastData('madElev')
madCoast0 <- fastData('madCoast0')
madRivers <- fastData('madRivers')
madDypsis <- fastData('madDypsis')

# start GRASS session for examples only
wd <- forwardSlash(tempdir()) # only for examples

fastStart(crs = madElev, grassDir = grassDir,
workDir = wd, location = 'examples') # line only needed for examples

### GRaster properties
######################

# convert SpatRasters to GRasters
elev <- fast(madElev)

dim(elev) # rows, columns, depths, layers
nrow(elev) # rows
ncol(elev) # columns
ndepth(elev) # depths
nlyr(elev) # layers

res(elev) # resolution

ncell(elev) # cells
ncell3d(elev) # cells (3D rasters only)

topology(elev) # number of dimensions

minmax(elev) # min/max values

# information on the GRASS session in which the GRaster is located
location(elev) # location
mapset(elev) # mapset

# "gnames" of the object (its name in GRASS)
gnames(elev)

# coordinate reference system
crs(elev)
st_crs(elev)

# extent (bounding box)
ext(elev)
st_bbox(elev)

# data type
datatype(elev)

# names
names(elev)

### GVector properties
######################

# convert sf vectors to GVectors
coast <- fast(madCoast4)
rivers <- fast(madRivers)
dypsis <- fast(madDypsis)

# extent
ext(rivers)
st_bbox(rivers) # extent

# coordinate reference system
crs(rivers)
st_crs(rivers)

# column names and data types
names(coast)
datatype(coast)

# session information
location(rivers) # GRASS location
mapset(rivers) # GRASS mapset

# points, lines, or polygons?
geomtype(dypsis)
geomtype(rivers)
geomtype(coast)

is.points(dypsis)
is.points(coast)

is.lines(rivers)
is.lines(dypsis)

is.polygons(coast)
is.polygons(dypsis)

# number of dimensions
topology(rivers)

# IMPORTANT #3: Revert back to original GRASS session if needed.
fastRestore(opts.)
removeSession('examples')

}
}
