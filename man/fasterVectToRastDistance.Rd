% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fasterVectToRastDistance.r
\name{fasterVectToRastDistance}
\alias{fasterVectToRastDistance}
\title{Calculate distance between all cells in a raster and nearest spatial point, polyline, or polygon}
\usage{
fasterVectToRastDistance(rast, vect, metric = "euclidean",
  meters = TRUE, invert = FALSE, grassLoc = NULL, grassInit = TRUE,
  grassToR = TRUE, ...)
}
\arguments{
\item{rast}{Either a raster or the full path and name of a raster object. This serves as a template for the new raster.}

\item{vect}{SpatialPoints, SpatialPointsDataFrame, SpatialLines, SpatialLinesDataFrame, SpatialPolygons, or SpatialPolygonsDataFrame or the full path and name of such an object.}

\item{metric}{Character, indicates type of distance to calculate:
\itemize{
\item \code{euclidean}: Euclidean distance
\item \code{geodesic} (default): geographic distance (suggested to use with \code{meters = TRUE}).
\item \code{squared}: Squared Euclidean distance
\item \code{maximum}: Maximum Euclidean distance
\item \code{manhattan}: Manhattan distance (i.e., "taxicab" distance, distance along cells going only north-south and east-west and never along a diagonal).
}
meters Logical, if \code{TRUE} then distance is in meters. If \code{FALSE} then distance is in map units.
invert Logical, if \code{TRUE} then calculate distance from any cell covered by a vector object to nearest cell **not** covered by a vector onject.}

\item{grassLoc}{Either \code{NULL} or a 3-element character vector. If the latter, the first element is the base path to the installation of GRASS, the second the version number, and the third the install type for GRASS.  For example, \code{c('C:/OSGeo4W64/', 'grass-7.4.1', 'osgeo4W')}. See \code{\link[link2GI]{linkGRASS7}} for further help. If \code{NULL} (default) the an installation of GRASS is searched for; this may take several minutes.}

\item{grassInit}{Logical, if \code{TRUE} (default) then a new GRASS session is initialized. If \code{FALSE} then it is assumed a GRASS session has been initialized using the raster in \code{vect}. The latter is useful if you are chaining \pkg{fasterRaster} functions together and the first function initializes the session.}

\item{grassToR}{Logical, if \code{TRUE} (default) then the product of the calculations will be returned to R. If \code{FALSE}, then the product is left in the GRASS session and named \code{distToVect}. The latter case is useful (and faster) when chaining several \pkg{fasterRaster} functions together.}

\item{...}{Arguments to pass to \code{\link[rgrass7]{execGRASS}} when used for rasterizing (i.e., function \code{r.grow.distance} in GRASS).}
}
\value{
If \code{grassToR} if \code{TRUE}, then a raster with the same extent, resolution, and coordinate reference system as \code{vect}. Otherwise, a raster with the name of \code{distToVect} is written into the GRASS session.
}
\description{
This function is a potentially faster version of the \code{\link[raster]{distance}} function in the \pkg{raster} package which calculates the distance between each cell and the nearest feature in a spatial points, lines, or polygon object. Alternatively, it can calculate the distance from any cell covered by a vector object and the nearest cell \emph{not} covered by a vector object. Note that the \code{distance} function also calculates distances between rasters, but this functionality is not reproduced in \code{fasterVectToRastDistance} (just distance between a raster and a vector object).
}
\details{
See (r.latlong)[https://grass.osgeo.org/grass74/manuals/r.grow.distance.html] for more details.  Note that if you get an error saying "", then you should add the EPSG code to the beginning of the raster and vector coordinate reference system string (its "proj4string"). For example, \code{proj4string(x) <- CRS('+init=epsg:32738')}. EPSG codes for various projections, datums, and locales can be found at (Spatial Reference)[http://spatialreference.org/].
}
\examples{
\dontrun{
# change this according to where GRASS 7 is installed on your system
grassLoc <- c('C:/OSGeo4W64/', 'grass-7.4.1', 'osgeo4W')

data(madForest2000)
data(madRivers)

# could also use distance() which is
# probably faster in this example
distToRiver <- fasterVectToRastDistance(madForest2000, madRivers,
	grassLoc=grassLoc)
# distToRiver <- distance(madForest2000, madRivers)
plot(distToRiver, main='Distance to Rivers (m)')
plot(madRivers, col='blue', add=TRUE)
}
}
\seealso{
\code{\link[raster]{distance}}
}
