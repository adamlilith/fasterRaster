% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fasterMosaic.r
\name{fasterMosaic}
\alias{fasterMosaic}
\title{Combine rasters that do not perfectly overlap}
\usage{
fasterMosaic(
  ...,
  cores = 1,
  memory = 300,
  replace = FALSE,
  inRastName = NULL,
  outGrassName = "mosaicRast",
  grassToR = TRUE,
  grassDir = options()$grassDir,
  inits = NULL
)
}
\arguments{
\item{...}{Two or more \code{SpatRasters}, and (optionally) arguments to send to \code{\link{initGrass}}.}

\item{cores}{Number of cores to use.}

\item{memory}{Memory to use, in MB. The defualt is 300 MB.}

\item{replace}{Logical or \code{NULL}. If \code{FALSE} or \code{NULL} (default), then attempting to overwrite rasters or vectors already in a \code{GRASS} session will result in an error. You can allow overwriting by changing this to \code{TRUE}, or by setting \code{inRastName}, \code{inVectName}, and/or \code{outGrassName} to values different from rasters or vectors that already exist in the session (not all functions have these arguments). Use \code{\link{fasterLs}} to see existing rasters and vectors.  You can set this for all functions at once using \code{\link{fasterOptions}}.}

\item{inRastName}{The names of the input rasters in \code{GRASS}. The default value is the names of the raster(s) (i.e., \code{names(raster)}).}

\item{outGrassName}{Character. Name of output in \code{GRASS}. This is useful if you want to refer to the output object in \code{GRASS} later in a session by \link{chaining} functions.}

\item{grassToR}{Logical or \code{NULL}. If \code{TRUE} or \code{NULL} (default) then the output will be returned to \code{R}. If \code{FALSE}, then the output is left in the \code{GRASS} session (with the name given by \code{outGrassName}). You can set this argument for all functions at once using \code{\link{fasterOptions}}.}

\item{inits}{Either \code{NULL} (default), or a named list of arguments to pass to \code{\link{initGrass}}. If \code{NULL}, then the current active \code{GRASS} session is used, or a new one in the "default" location is created.}
}
\value{
A \code{SpatRaster}.
}
\description{
This function combines rasters with (potentially) different extents but the same registration, resolution, and coordinate reference system. The new output rasters will have the extent of the overall set of rasters. Preference is given by the order in which rasters are input. That is, if a given cell has a value in the first and the second raster, then the value in the first raster is used. However, if the cell is \code{NA} in the first raster, then the value in the second raster has will be used, unless the second raster also had \code{NA}, and so on.\cr
Note that unlike most \pkg{fasterRaster} functions, this function changes the extent of the entire \code{GRASS} session (i.e., in \code{GRASS} parlance, the "\href{https://grass.osgeo.org/grass82/manuals/grass_database.html}{location}"). This can affect any existing rasters and downstream analyses that use the extent to crop newly imported rasters or vectors.
}
\examples{
\dontrun{

library(sf)
library(terra)

madElevAnt <- fasterData('madElevAnt')
madElevMan <- fasterData('madElevMan')
madCoast0 <- fasterData('madCoast0')

# make different color palettes for each raster so we can differentiate them
antCol <- colorRampPalette(c('lightblue', 'darkblue'))
manCol <- colorRampPalette(c('pink', 'darkred'))

antCol <- antCol(10)
manCol <- manCol(10)

plot(st_geometry(madCoast0))
plot(madElevAnt, col=antCol, add=TRUE, legend=FALSE)
plot(madElevMan, col=manCol, add=TRUE, legend=FALSE)

inRastName <- c('ant', 'man') # cool!
combo <- fasterMosaic(madElevAnt, madElevMan, inRastName=inRastName, cores=2)

plot(combo)

}
}
\seealso{
\code{\link[terra]{mosaic}} in package \pkg{terra}; \href{https://grass.osgeo.org/grass82/manuals/r.patch.html}{\code{r.patch}} in \code{GRASS}
}
