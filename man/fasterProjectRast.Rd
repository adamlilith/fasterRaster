% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fasterProjectRast.r
\name{fasterProjectRast}
\alias{fasterProjectRast}
\title{Project and resample a raster}
\usage{
fasterProjectRast(
  rast,
  template,
  method = "bilinear",
  grassDir = options()$grassDir,
  grassToR = TRUE,
  outGrassName = "resampled",
  ...
)
}
\arguments{
\item{rast}{A \code{SpatRaster} or the name of a raster already in an existing \code{GRASS} session.}

\item{template}{Either a \code{SpatRaster} or the name of a raster in an existing \code{GRASS} session to serve as a template for projecting.}

\item{method}{Character, method for resampling cells:
\itemize{
        \item \code{nearest}: Nearest neighbor (uses value from 1 cell).
        \item \code{bilinear}: Bilinear interpolation (default; uses values from 4 cells).
        \item \code{bilinear_f}: Bilinear interpolation with fallback.
        \item \code{bicubic}: Bicubic interpolation (uses values from 16 cells).
        \item \code{bicubic_f}: Bicubic interpolation with fallback.
        \item \code{lanczos}: Lanczos interpolation (uses values from 25 cells).
        \item \code{lanczos_f}: Lanczos interpolation with fallback.
}}

\item{grassDir}{Name of the folder path in which \code{GRASS} is installed. For a Windows system, this might be something like \code{'C:/Program Files/GRASS GIS 8.2'}. For a Mac system, this might be like \code{"/Applications/GRASS-8.2.app/Contents/Resources"}. If you are using a lot of \pkg{fasterRaster} functions, it can be easier to set this once using \code{\link{fasterOptions}}. By default, this is \code{NULL}, in which case the install path for \code{GRASS} will be searched for, but if not found, will result in an error.}

\item{grassToR}{If \code{TRUE} (default) then the output will be returned to \pkg{R}. If \code{FALSE}, then the output is left in the \code{GRASS} session and named the value in \code{outGrassName}. You can then refer to the output in subsequent \pkg{fasterRaster} functions and avoid the need to re-import it. This is called "chaining" functions together, and it can save a lot of computational time.}

\item{outGrassName}{Character. Name of output in \code{GRASS}. This is useful if you want to refer to the output object in \code{GRASS} later in a session by "chaining" functions.}

\item{...}{Arguments to pass to \code{\link[rgrass]{execGRASS}} when used for rasterizing (i.e., function \code{r.proj} in \code{GRASS}).}
}
\value{
If \code{grassToR} if \code{TRUE}, then a raster or raster stack with the same extent, resolution, and coordinate reference system as \code{rast}. Regardless, a raster with the name given by \code{outGrassName} is written into the \code{GRASS} session.
}
\description{
This function is a potentially faster version of the \code{\link[terra]{project}} function in the \pkg{terra} package for projecting (and resampling) a raster. It requires the user has \code{GRASS} GIS Version 7 installed.
}
\details{
Note that it is not uncommon to get the warning "Projection of dataset does not appear to match the current mapset" (followed by more information). If the coordinate reference systems match, then the cause is likely due to extra information being stored in one of the spatial object's coordinate reference system slot (e.g., an EPSG code in addition to the other proj4string information), in which case it can probably be safely ignored. See the documentation for the \code{GRASS} module \code{r.proj}{https://grass.osgeo.org/grass82/manuals/r.proj.html}.
}
\examples{
man/examples/ex_fasterProjectRast.r

}
\seealso{
\code{\link[terra]{project}}
}
