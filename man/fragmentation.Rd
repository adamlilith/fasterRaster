% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fragmentation.r
\name{fragmentation,SpatRaster-method}
\alias{fragmentation,SpatRaster-method}
\alias{fragmentation}
\alias{fragmentation,GRaster-method}
\title{Landscape fragmentation class following Riitters et al. (2020)}
\usage{
\S4method{fragmentation}{SpatRaster}(
  x,
  w = 3,
  undet = "perforated",
  restrict = FALSE,
  cores = faster("cores")
)

\S4method{fragmentation}{GRaster}(x, w = 3, undet = "perforated", restrict = FALSE)
}
\arguments{
\item{x}{A \code{SpatRaster} or \code{GRaster}.}

\item{w}{An odd, positive integer: Size of the window across which fragmentation is calculated (in units of "rows" and "columns"). The default is 3, meaning the function uses a 3x3 moving window to calculate fragmentation. For large rasters, compute time is ~\emph{O}(\code{N}) + \emph{O}(\code{N * w^2}), where \code{N} is the number of cells in the raster. So, even a small increase in \code{w} can increase compute time by a lot.}

\item{undet}{Character: How to assign the "undetermined" case. Valid values are \code{"perforated"} (default), \code{"edge"}, and \code{"undetermined"}. Partial matching is used. If \code{Pf} is the proportional density raster cell value and \code{Pff} the proportional connectivity raster cell value, the undetermined case occurs when \code{Pf} > 0.6 and \code{Pf == Pff}.}

\item{restrict}{Logical: If \code{TRUE}, then fragmentation will only be assigned to cells that have the focal habitat within them. If \code{FALSE} (default), cells surrounding the focal habitat class can also be assigned a fragmentation class other than 0, even if they do not have the focal habitat in them. Note that the case where \code{restrict = TRUE} is a departure from Riitters et al. (2020).}

\item{cores}{Integer: Number of processor cores to use for when processing a \code{SpatRaster}.}
}
\value{
A categorical \code{SpatRaster} or \code{GRaster}. The values assigned to each class can be seen with \code{\link[=levels]{levels()}}.
}
\description{
Riitters et al. (2020) propose a classification scheme for forest fragmentation (which can be applied to any habitat type). The scheme relies on calculating density (e.g., number of forested cells in a window around a focal cell) and connectivity (number of cases where neighboring cells are both forested). These values are used to assign classes to each cell: "patch," "transitional," "perforated," "edge," and "interior" (plus an optional "undetermined" class for an edge case). To this, we also add a "none" class which occurs when the focal cell's window has no cells with the focal habitat. This function calculates these classes from a \code{GRaster} or \code{SpatRaster} in which the focal habitat type has cell values of 1, and non-focal habitat type has cell values of 0 or \code{NA}.
}
\examples{
if (grassStarted()) {

# Setup
library(terra)

# Example data:
madForest <- fastData("madForest2000") # raster

### Fragmentation classes from a SpatRaster
###########################################

# Fragmentation class:
fragTerra <- fragmentation(madForest)
fragTerraMasked <- fragmentation(madForest, restrict = TRUE)

# Compare:
fragTerras <- c(fragTerra, fragTerraMasked)
names(fragTerras) <- c("unrestricted", "restricted")

plot(fragTerras)
levels(fragTerras)

### Fragmentation classes from a GRaster
########################################

# Convert to GRaster:
forest <- fast(madForest)

# Fragmentation class:
frag <- fragmentation(forest)
fragMasked <- fragmentation(forest, restrict = TRUE)

# Compare:
frags <- c(frag, fragMasked)
names(frags) <- c("unrestricted", "restricted")

plot(frags)
levels(frags)

frags <- droplevels(frags, level = 1:2)
levels(frags)

plot(frags)

}
}
\references{
Riitters, K., J. Wickham, R. O'Neill, B. Jones, and E. Smith. 2000. Global-scale patterns of forest fragmentation. \emph{Conservation Ecology} 4:3. URL: \url{http://www.consecol.org/vol4/iss2/art3/}. Also note the \href{https://www.ecologyandsociety.org/vol4/iss2/art3/errata/january26.2001.html}{errata}.
}
