% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table.r
\name{table<-,GVector-method}
\alias{table<-,GVector-method}
\alias{table<-}
\title{Add, replace, or remove a GVector's data table}
\usage{
\S4method{table}{GVector}(x) <- value
}
\arguments{
\item{x}{A \code{GVector}.}

\item{value}{A \code{data.frame}, \code{data.table}, \code{matrix}, a \code{GVector} with a data table, \emph{or} \code{NULL}. If this is \code{NULL}, then any existing data table is removed. Otherwise, the existing table (if any) will be replaced with the new table. If \code{value} is a \code{GVector}, then its data table will be used to replace the one in \code{x}.}
}
\value{
A \code{GVector}.
}
\description{
\code{GVector}s can have data tables associated with them, with one row per geometry (see \code{\link[=ngeom]{ngeom()}}). This function can be used to attach or replace a data table, or to remove a data table.
}
\examples{
if (grassStarted()) {

# Setup
library(sf)

# Rivers vector
madRivers <- fastData("madRivers")

# Convert sf to a GVector
rivers <- fast(madRivers)

# Subset rivers vector
rivers1 <- rivers[1:2]
rivers2 <- rivers[10:11]

# Concatenate rivers
riversCombo <- rbind(rivers1, rivers2)
riversCombo

# Add columns
newCol <- data.frame(new = 1:11)
riversCol <- colbind(rivers, newCol)
riversCol

as.data.frame(riversCol)

# Remove table
riversCopy <- rivers
riversCopy # 11 rows in data table
table(riversCopy) <- NULL
riversCopy # no data table

# Add a new table
newTable <- data.frame(num = 1:11, letters = letters[1:11])
table(riversCopy) <- newTable
riversCopy

}
}
\seealso{
\code{\link[=rbind]{rbind()}}, \code{\link[=colbind]{colbind()}}
}
