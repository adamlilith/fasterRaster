% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fasterOptions.r
\name{fasterOptions}
\alias{fasterOptions}
\title{Define arguments shared across functions for all functions at once}
\usage{
fasterOptions(
  grassDir,
  replace,
  grassToR,
  outVectClass,
  autoRegion,
  grassVer,
  restore = FALSE
)
}
\arguments{
\item{grassDir}{Most \pkg{fasterRaster} functions use an argument named "\code{grassDir}" for specifying where \code{GRASS} is installed. To define \code{grassDir} for all functions at once, simply do as follows: \cr

\code{grassDir <- 'C:/Program Files/GRASS GIS 8.3' # example path for Windows} \cr
\code{grassDir <- "/Applications/GRASS-8.3.app/Contents/Resources" # example path for a Mac} \cr
\code{grassDir <- '/usr/local/grass' # Linux... maybe} \cr

\code{fasterOptions(grassDir = grassDir)} \cr}

\item{replace}{The \code{replace} argument tells a function if it is allowed to overwrite any existing rasters or vectors in an active \code{GRASS} session. This includes rasters or vectors that are exported to the \code{GRASS} session or created within it. The default for this argument is \code{NULL} (same as \code{FALSE}), but it can be set to \code{TRUE} for all functions at once using: \cr

\code{fasterOptions(replace = TRUE)} \cr

To disallow overwriting again, set the option to \code{FALSE}:\cr

\code{fasterOptions(replace = FALSE)}}

\item{grassToR}{By default, most \pkg{fasterRaster} functions return rasters or vectors they create or modify back to \code{R}, which can take a lot of time. However, once a raster or vector is in a \code{GRASS} session, it can be manipulated by further functions without the time-consuming task of moving it back and forth between \code{GRASS} and \code{R}. Using multiple \pkg{fasterRaster} functions together like this is called \link{chaining}. You can change the default so that rasters and vectors are not impoted back to \code{R} by setting the \code{grassToR} option to \code{FALSE} for all functions at once using: \cr

\code{fasterOptions(grassToR = FALSE)} \cr

To turn importing back to \code{R} for all functions simply do:

\code{fasterOptions(grassToR = TRUE)} \cr}

\item{outVectClass}{By default, \code{fasterRaster} functions that output spatial vectors produce objects of class \code{SpatVector} from the \pkg{terra} package. However, if you want them to be \code{sf} objects from the \pkg{sf} package, you can cause all such functions to return these objects using: \cr

\code{fasterOptions(vectClass = 'sf')} \cr

To revert the setting, simply set the option to \code{'SpatVector'}: \cr

\code{fasterOptions(outVectClass = 'SpatVector')} \cr}

\item{autoRegion}{In \code{GRASS}, a \link{region} is a data object that defines the extent and spatial resolution of operations on rasters, including raster creation and manipulation, and exporting and saving of rasters. If \code{autoRegion} is \code{TRUE} or \code{NULL} (default for all functions), then \pkg{fasterRaster} functions will automatically manage the extent and resolution of the active \code{GRASS} \link{region}. Most users of \pkg{fasterRaster} will likely desire to keep this behavior, so should not change this argument to \code{FALSE}. However, it can be turned off so users can manually manipulate the region using:\cr

\code{fasterOptions(autoRegion = FALSE)}\cr

Automatic handling of regions can be turned on again by setting:

\code{fasterOptions(autoRegion = TRUE)}\cr}

\item{grassVer}{The \code{\link{fasterHelp}} function supplies links to help pages for \code{GRASS} modules, but these links are version-dependent. You can change the version of \code{GRASS} you are using with this function, and thus avoid having to define it every time you use \code{\link{fasterHelp}}. This should be the version number of your \code{GRASS} installation, as a character (not numeric). The decimal is ignored. Valid examples: \code{'8.0'} or \code{'80'}.}

\item{restore}{If \code{TRUE}, then all values will be reset to their defaults (except for \code{grassDir}, which will not be changed).}
}
\value{
The values of the current settings. The function also redefines these settings.
}
\description{
This function allows users to define some arguments shared by most \pkg{fasterRaster} functions all at once. You can override the defaults by specifying a different value when calling a specific function.
}
\examples{
\dontrun{

# IMPORTANT: These function use the "location", "restartGrass", and
# "warn" arguments to avoid interfering with an existing GRASS session.
# WHEN YOU ARE DONE WITH THE EXAMPLES, run this line to revert to your
# active GRASS session:
# initGrass(location='default') # change "location" if not "default"

# For fasterRaster functions below, this will be used to set up a location
# that does not interfere with any locations you may be using. Usually, you
# do not need to use the argument "inits".
inits <- list(location='examples', restartGrass=TRUE, warn=FALSE)

# IMPORTANT: Change this to where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.2.app/Contents/Resources" # for a Mac
grassDir <- '/usr/local/grass' # example for Linux
grassDir <- 'C:/Program Files/GRASS GIS 8.2' # example for a PC

library(sf)
library(terra)

# get raster data
madElev <- fasterData('madElev')

### Calling a function without setting options:

# calculate contours... note the number of arguments we need to define
# (some are using their defaults here, so we normally could just use those)
levels <- seq(100, 500, by=100)
conts <- fasterContour(madElev, levels=levels,
grassDir=grassDir, replace=FALSE, grassToR=TRUE, outVectClass='SpatVector',
inits=inits)









}
}
