% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compositeRGB.r
\name{compositeRGB,GRaster-method}
\alias{compositeRGB,GRaster-method}
\alias{compositeRGB}
\title{Combine red, green, and blue color bands to make a composite GRaster}
\usage{
\S4method{compositeRGB}{GRaster}(r, g = NULL, b = NULL, levels = 256, dither = FALSE)
}
\arguments{
\item{r, g, b}{Either:
\itemize{
\item One \code{GRaster} with one band each for \code{r}, \code{g}, or \code{b} representing red, green, and blue color bands; or
\item \code{r} is  single \code{GRaster} with 3 bands (R, G, and B bands), and \code{g} and \code{b} are \code{NULL}.
}}

\item{levels}{Either a single value that is an integer, or a vector of integers: Number of levels of red, green, and blue intensities represented in \code{r}, \code{g}, and \code{b}. If a single value is supplied, it is assumed that all three have the same number of levels. If three values are supplied, then they correspond to the R, G, and B bands. The default is 256 (assume that R, G, and B rasters have values between 0 and 255).}

\item{dither}{Logical: If \code{TRUE}, apply Floyd-Steinberg dithering. Default is \code{FALSE}.}
}
\value{
A \code{GRaster}.
}
\description{
This function takes as arguments three rasters typically representing red, green, and blue color bands, and returns a single raster with values based on their combination. Typically, this raster should be plotted in grayscale.
}
\examples{
\dontrun{
# NB This example is in a "dontrun{}" block because it requires users to have
# GRASS GIS Version 8+ installed on their system.

# IMPORTANT #1: If you already have a GRASS session started, you will need to
# run the line below and the last line in this example to work with it again.
# If you have not started a GRASS session, you can skip this step and go to
# step #2.
opts. <- getFastOptions()

# IMPORTANT #2: Select the appropriate line below and change as necessary to
# where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.3.app/Contents/Resources" # Mac
grassDir <- "C:/Program Files/GRASS GIS 8.3" # Windows
grassDir <- "/usr/local/grass" # Linux

# Setup
library(terra)

# Example data
madLand <- fastData("madLand")
madRivers <- fastData("madRivers")

# Start GRASS session for examples only:
faster(x = madLand, grassDir = grassDir,
workDir = tempdir(), location = "examples") # line only needed for examples

# Convert SpatRaster to GRaster and SpatVector to GVector
land <- fast(madLand)
rivers <- fast(madRivers)

# Plot:
plot(land[[1L]])
plot(rivers, add = TRUE)

# Histogram:
hist(land)

# Plot surface reflectance in RGB:
plotRGB(land, 3, 2, 1) # "natural" color
plotRGB(land, 4, 1, 2, stretch = "lin") # emphasize near-infrared (vegetation)

# Make composite map from RGB and plot in grayscale:
comp <- compositeRGB(r = land[[3]], g = land[[2]], b = land[[1]])
grays <- paste0("gray", 0:100)
plot(comp, col = grays)

# IMPORTANT #3: Revert back to original GRASS session if needed.
restoreSession(opts.)
removeSession("examples")

}
}
\seealso{
\code{\link[=plotRGB]{plotRGB()}}, \code{\link[terra:plotRGB]{terra::plotRGB()}}
}
