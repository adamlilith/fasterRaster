% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subset_single_bracket.r
\docType{methods}
\name{[}
\alias{[}
\alias{[,GVector,ANY,ANY-method}
\title{Subset geometries of a GVector}
\usage{
\S4method{[}{GVector,ANY,ANY}(x, i, j, verbose = FALSE, dropTable = FALSE)
}
\arguments{
\item{x}{A \code{GVector}.}

\item{i}{Numeric integer, integer, or logical vector: Indicates which geometry(ies) to obtain. Negative numeric or integer values will remove the given geometries from the output. If a logical vector is supplied and it is not the same length as the number of geometries, it will be recycled.}

\item{j}{Numeric integer, integer, logical, or character: Indices or name(s) of the column(s) to obtain. You can see column names using \code{\link[=names]{names()}}. Negative numeric or integer values will remove the given columns from the output. If a logical vector is supplied and it is not the same length as the number of columns, it will be recycled.}

\item{verbose}{Logical: If \code{TRUE} (or if \code{faster("verbose")} is \code{TRUE}), then display progress.}

\item{dropTable}{Logical: If \code{FALSE} (default), the appropriate subset of the \code{GVector}s data table will be included in the subset. If \code{TRUE}, the table will be dropped.}
}
\value{
A \code{GVector}.
}
\description{
The \code{[} operator returns a subset or remove specific geometries of a \code{GVector}. You can get the number of geometries using \code{\link[=ngeom]{ngeom()}}. Note that you cannot use this function to change the "order" in which geometries or their associated records in a data table appear. For example, \code{vector[1:3]} and \code{vector[3:1]} will yield the exact same results, where the first geometry in \code{vector} will also be the first geometry in either of the outputs.

The subset operation will sometimes fail if \code{i} has many values. In these cases, try setting the value of the \code{nAtATime} option lower using \code{\link[=faster]{faster()}}. Smaller values take more time, but are also less prone to failure.

Note that subsetting can take a very long time if \code{i} has many values, even for moderately-sized vectors. In these cases, it may help to set \code{verbose = TRUE} so you have something exciting to watch as it does its work.
}
\examples{
if (grassStarted()) {

# Setup
library(terra)

### GRasters
############

# Example data
madElev <- fastData("madElev") # elevation raster
madForest2000 <- fastData("madForest2000") # forest raster
madForest2014 <- fastData("madForest2000") # forest raster

# Convert SpatRasters to GRasters
elev <- fast(madElev)
forest2000 <- fast(madForest2000)
forest2014 <- fast(madForest2014)

### Re-assigning values of a GRaster

constant <- elev
constant[] <- 14
constant

names(constant) <- "constant"

### Adding and re-assigning layers of a GRaster

rasts <- c(elev, constant, forest2000)

# Combine with another layer:
add(rasts) <- forest2014

# Combine two layers:
elevs <- c(2 * elev, elev / 10)
names(elevs) <- c("elev_x2", "elev_div10")
elevs

# Combine with previous layers:
rasts <- c(rasts, elevs)
rasts

### Subsetting GRaster layers

# Subset:
rasts[[2:3]]
rasts[[c("madForest2000", "elev_x2")]]
rasts$madForest2000

# Get every other layer:
rasts[[c(FALSE, TRUE)]]

### Replacing layers of a GRaster

# Replace a layer
logElev <- log(elev)
names(logElev) <- "logElev"
rasts$madForest2000 <- logElev
rasts

# Replace a layer:
rasts[[3]] <- forest2000
rasts

### GVectors
############

# example data
madDypsis <- fastData("madDypsis") # vector of points

# Convert SpatVector to GVector
dypsis <- fast(madDypsis)

### Retrieving GVector columns

dypsis$species # Returns the column

dypsis[[c("year", "species")]] # Returns a GRaster with these columns
dypsis[ , c("year", "species")] # Same as above

### Subsetting GVector geometries

# Subset first three geometries
dypsis[1:3]
dypsis[1:3, "species"]

# Get geometries by data table condition
dypsis[dypsis$species == "Dypsis betsimisarakae"]

### (Re)assigning GVector column values

# New column
dypsis$pi <- pi

# Re-assign values
dypsis$pi <- "pie"

# Re-assign specific values
dypsis$institutionCode[dypsis$institutionCode == "MO"] <-
   "Missouri Botanical Garden"

}
}
\seealso{
\link{$}, \code{\link[fasterRaster]{[[}}
}
