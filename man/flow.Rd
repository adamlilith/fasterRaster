% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flow.r
\name{flow,GRaster-method}
\alias{flow,GRaster-method}
\alias{flow}
\title{Identify watershed basins and direction and accumulation of flow}
\usage{
\S4method{flow}{GRaster}(
  x,
  direction = "multi",
  return = "accumulation",
  flowThreshold = Inf,
  tempdir = tempdir()
)
}
\arguments{
\item{x}{A \code{GRaster} representing elevation.}

\item{direction}{Character: Either \code{"single"} or \code{"multi"}. This indicates whether a single-direction flow or multi-direction flow model is used. The default is \code{"multi"}. Partial matching is used and case is ignored.}

\item{return}{Character vector: Indicates what rasters to return. Partial matching is used and case is ignored. Options include:
\itemize{
\item \code{"accumulation"} (default): Flow accumulation raster.
\item \code{"direction"}: Flow direction
\item \code{"basins"}: Watershed basins
\item \code{"flooded"}: Flooded areas
\item \code{"TCI"}: Topographic convergence index
}}

\item{flowThreshold}{Numeric (default is \code{Inf}): For the multi-direction flow model, this indicates the amount of accumulated flow above which the single-direction flow rule is used to locate the egress of water from a cell.}

\item{tempdir}{Character: Directory in which to store temporary files. The \strong{GRASS} module \code{r.terraflow} makes a lot of temporary files. The default is given by \code{\link[=tempdir]{tempdir()}}.}
}
\value{
A \code{GRaster}.
}
\description{
The \code{flow()} function uses a raster representing elevation to compute rasters representing:
\itemize{
\item Flow accumulation raster;
\item Direction of flow;
\item Watershed basins;
\item Flooded areas;
\item Topographic convergence (log of flow accumulation divided by local slope).
}

More details about the computations can be found at the help page for the \verb{[r.terraflow](https://grass.osgeo.org/grass84/manuals/r.terraflow.html)} module for \strong{GRASS}.
}
\examples{
if (grassStarted()) {

# Setup
library(terra)

# Example data
madElev <- fastData("madElev")
elev <- fast(madElev)

# Calculate flow accumulation and watershed basins rasters
water <- flow(elev, return = c("accumulation", "basins", "direction"))
water
plot(water)

}
}
