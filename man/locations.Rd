% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/locations.r
\name{.locations}
\alias{.locations}
\title{Meta-data on active GRASS locations}
\usage{
.locations(warn = TRUE)
}
\arguments{
\item{warn}{Logical: If \code{TRUE} (default), display a warning if no \strong{GRASS} "locations" have been created.}
}
\value{
A named \code{list}. The names are the "location's" names and the values are the coordinate reference strings.
}
\description{
\strong{GRASS} uses "locations"to store sets of rasters and vectors with the same coordinate reference system (CRS). These rasters and vectors may or may not be in the same actual location on Earth--they just have the same CRS. This function returns information on all of the \strong{GRASS} "locations" that have been initialized. It is mainly useful for developers.

NB: \strong{fasterRaster} always uses the "PERMANENT" mapset.
}
\examples{
if (grassStarted()) {

# Setup
library(terra)

# Example data
madElev <- fastData("madElev")
madChelsa <- fastData("madChelsa")
madChelsa1 <- madChelsa[[1]]

# Convert SpatRasters to GRasters.
# Each raster has a different CRS so will be put into a different location.
elev <- fast(madElev)
chelsa1 <- fast(madChelsa1)

# Name of the currently active location
.location()
.location(elev)
.location(chelsa1)

# All available GRASS locations
.locations()

# Find location of an object among all active locations
.locationFind(elev)
.locationFind(chelsa1)
.locationFind(chelsa1, return = "index")
.locationFind(chelsa1, return = "crs")

# Switch between locations
.locationRestore(elev)
.locationRestore(chelsa1)

loc <- .location(elev)
.locationRestore(loc)

# We could use .locationDelete(elev) to delete
# the location where "elev" is stored.

# Mapsets are always "PERMANENT" in fasterRaster
.mapset()
.mapset(elev)
.mapset(chelsa1)

}
}
\keyword{internal}
