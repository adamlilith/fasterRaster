% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fast.r
\name{fast,character-method}
\alias{fast,character-method}
\alias{fast}
\alias{fast,SpatRaster-method}
\alias{fast,stars-method}
\alias{fast,SpatVector-method}
\alias{fast,sf-method}
\title{Create a GRaster or GVector}
\usage{
\S4method{fast}{character}(x, rastOrVect = NULL)

\S4method{fast}{SpatRaster}(x)

\S4method{fast}{stars}(x)

\S4method{fast}{SpatVector}(x)

\S4method{fast}{sf}(x)
}
\arguments{
\item{x}{Any one of:
\itemize{
\item A \code{SpatRaster} or \code{stars} raster. Rasters can have one or more layers. They will retain their "layerdness" in most \strong{fasterRaster} functions.
\item A \code{SpatVector} or \code{sf} spatial vector.
\item A character string with the path and filename of a raster or vector to be loaded directly into \strong{GRASS}. The function will attempt to ascertain the type of object from the file extension (raster or vector), but it can help to indicate which it is using the \code{rastOrVect} argument if it is unclear.
}}

\item{rastOrVect}{Either \code{NULL} (default) or character (\code{raster} or \code{vector}). If \code{x} is a raster or vector already in \strong{R}, this does not need to be specified. However, if \code{x} is a filename, then the function will try to ascertain the data type from the filenames, but sometimes this will fail. In that case, it can help to specify if the file holds a raster or vector. Partial matching is used.}
}
\value{
A \code{GRaster} or \code{GVector}.
}
\description{
To use most \strong{fasterRaster} functions, you need to
\enumerate{
\item Initiate a \strong{GRASS} session with \code{\link[=fastStart]{fastStart()}};
\item Then use \code{fast()} to either:
\itemize{
\item Convert a \code{SpatRaster}, \code{SpatVector}, \code{sf} object, or \code{stars} raster to a \code{GRaster} or \code{GVector},
\item Load a raster or vector from a file directly into the \code{GRaster} or \code{GVector} format. \strong{GRASS} supports loading from disk a variety of raster (see the \strong{GRASS} manual page for \code{r.in.gdal}) and vector(see the \strong{GRASS} manual page for \code{v.in.ogr}) formats, though not all of them will work with this function.
}
}
}
\examples{
\dontrun{
# NB This example is in a "dontrun{}" block because it requires users to have
# GRASS GIS Version 8+ installed on their system.

# IMPORTANT #1: If you already have a GRASS session started, you will need to
# run the line below and the last line in this example to work with it again.
# If you have not started a GRASS session, you can skip this step and go to
# step #2.
opts. <- getFastOptions()

# IMPORTANT #2: Select the appropriate line below and change as necessary to
# where GRASS is installed on your system.

grassDir <- "/Applications/GRASS-8.2.app/Contents/Resources" # Mac
grassDir <- 'C:/Program Files/GRASS GIS 8.2' # Windows
grassDir <- '/usr/local/grass' # Linux

# setup
library(sf)
library(terra)

# example data
madElev <- fastData('madElev')
madRivers <- fastData('madRivers')

# start GRASS session for examples only
fastStart(grassDir = grassDir, crs = madElev,
workDir = tempdir(), location = 'examples') # line only needed for examples

# convert a SpatRaster to a GRaster
elev <- fast(madElev)
elev

# convert an sf vector to a GVector
rivers <- fast(madRivers)
rivers

# IMPORTANT #3: Revert back to original GRASS session if needed.
sessionRestore(opts.)
removeSession('examples')

}
}
\seealso{
\code{\link[rgrass:readRAST]{rgrass::read_RAST()}} and \code{\link[rgrass:readVECT]{rgrass::read_VECT()}}, plus \strong{GRASS} modules \code{r.in.gdal} and \code{v.in.ogr}
}
