% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/activeCat.r
\name{activeCat,GRaster-method}
\alias{activeCat,GRaster-method}
\alias{activeCat}
\alias{activeCat<-,GRaster-method}
\alias{activeCat<-}
\title{Get or set the column with category labels in a categorical raster}
\usage{
\S4method{activeCat}{GRaster}(x, layer = 1, names = FALSE)

\S4method{activeCat}{GRaster}(x, layer = 1) <- value
}
\arguments{
\item{x}{A categorical \code{GRaster}.}

\item{layer}{Numeric, integer, logical, or character: Indicates for which layer(s) to get or set the active category column. This can be a number (the index of the raster(s)), a logical vector (\code{TRUE} ==> get/set the active category column, \code{FALSE} ==> leave as-is), or a character vector (names of layers).}

\item{names}{Logical: If \code{TRUE}, display the name(s) of the active column(s). If \code{FALSE} (default), report the index of the active column. Following \code{\link[terra:activeCat]{terra::activeCat()}}, the first column in the levels table is ignored. So, an active column of "1" means the second column is active. "2" means the third column is active, and so on.}

\item{value}{Numeric, integer, or character. Following \code{\link[terra:activeCat]{terra::activeCat()}}, the first column in each levels table is ignored. So, if you want the second column to be the category label, the use 1. if you want the third column, use 2, and so on. You can also specify the active column by its column name.}
}
\value{
\code{activeCat()} returns an integer or character vector of active column indices or names. \verb{activeCat()<-} returns a \code{GRaster}.
}
\description{
\code{GRaster}s can represent \link[=tutorial_raster_data_types]{categorical data}. Cell values are actually integers, each corresponding to a category, such as "desert" or "wetland." A categorical raster is associated with a table that matches each value to a category name. The table must be \code{NULL} (i.e., no categories--so not a categorical raster), or have at least two columns. The first column must have integers and represent raster values. One or more subsequent columns must have category labels. Which column corresponds to category labels can be seen using \code{\link[=activeCat]{activeCat()}} and set using \link{activeCat()<-}.

Several functions help manage categorical rasters:
\itemize{
\item \code{\link[=levels]{levels()}}: Reports category values and their labels. Only the values and active column is reported.
\item \code{\link[=cats]{cats()}}: Reports category values and their labels. The entire table is returned.
\item \link{levels()<-}: Assign category values and their labels to all layers.
\item \code{\link[=categories]{categories()}}: Assign category values and their labels to specific layers.
\item \code{\link[=nlevels]{nlevels()}}: Number of levels in each raster.
\item \code{activeCat()}: Retrieve the column index or name of the category labels.
\item `activeCat()<-: Set the column index or name of the category labels.
}
}
\examples{
\dontrun{
# NB This example is in a "dontrun{}" block because it requires users to have
# GRASS GIS Version 8+ installed on their system.

# IMPORTANT #1: If you already have a GRASS session started, you will need to
# run the line below and the last line in this example to work with it again.
# If you have not started a GRASS session, you can skip this step and go to
# step #2.
opts. <- getFastOptions()

# IMPORTANT #2: Select the appropriate line below and change as necessary to
# where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.3.app/Contents/Resources" # Mac
grassDir <- "C:/Program Files/GRASS GIS 8.3" # Windows
grassDir <- "/usr/local/grass" # Linux

# Setup
library(terra)

# Example data: Land cover raster
madCover <- fastData("madCover")

# Start GRASS session for examples only
faster(x = madCover, grassDir = grassDir,
workDir = tempdir(), location = "examples") # line only needed for examples

# Convert categorical SpatRaster to categorical GRaster:
cover <- fast(madCover)

# set categories
cover # note... no categories
levs <- levels(madCover)
levs <- levs[[1]]
cover <- categories(cover, layer = 1, value = levs)

cover # Note display of "min"/"max" categories and number of categories
is.factor(cover) # Is the raster categorical?
ncat(cover) # Number of categories
levels(cover) # Categories

# Re-assign levels
value <- c(20, 30, 40, 50, 120, 130, 140, 170, 210)
label <- c("Cropland", "Cropland", "Forest", "Forest", "Forest", "Shrubland", "Herbaceous", "Flooded", "Water")

cats <- data.frame(value = value, label = label)
cover <- categories(cover, layer = 1, value = cats)
cover

# We can implement logical operations on categorical rasters
cover < "Forest" # 1 for cells with a value < 40, 0 otherwise
cover <= "Forest" # 1 for cells with a value < 120, 0 otherwise
cover == "Forest" # 1 for cells with value of 40-120, 0 otherwise
cover != "Forest" # 1 for cells with value that is not 40-120, 0 otherwise
cover > "Forest" # 1 for cells with a value > 120, 0 otherwise
cover >= "Forest" # 1 for cells with a value >= 120, 0 otherwise

cover \%in\% c("Cropland", "Forest") # 1 for cropland/forest cells, 0 otherwise

# IMPORTANT #3: Revert back to original GRASS session if needed.
fastRestore(opts.)
removeSession("examples")

}
}
