% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleanGeom.r
\name{cleanGeom,GVector-method}
\alias{cleanGeom,GVector-method}
\alias{cleanGeom}
\title{Fix undesirable geometries of a vector}
\usage{
\S4method{cleanGeom}{GVector}(x, method = "duplicated", tolerance = NULL, minArea = 0)
}
\arguments{
\item{x}{A \code{GVector}.}

\item{method}{Character: Method used to clean line segments. Partial matching is used, and case does not matter:
\itemize{
\item \code{duplicated}: Remove duplicated features and area centroids.
\item \code{break}: Break lines at intersections and lines that form closed loops (e.g., 0, 1, 0).
\item \code{removeDangles}: Remove "dangling" lines if shorter than \code{tolerance} distance. If \code{tolerance} is <0, all dangles will be removed.
\item \code{changeDangles}: Change "dangles" to lines if is shorter than \code{tolerance} distance. If \code{tolerance} is <0, all dangles will be changed to lines.
\item \code{removeBridges}: Remove "bridges" to "islands" (which are topologically incorrect) within geometries.
\item \code{changeBridges}: Change "bridges" to "islands" (which are topologically incorrect) within geometries to lines.
\item \code{snap}: Snap lines to vertex if they are less than \code{tolerance} apart. Subsequent removal of dangles may be needed.
\item \code{dupAreaCentroids}: Remove duplicated area centroids. In \strong{GRASS}, closed polygons have their attributes mapped to a (hidden) centroid of the polygon.
\item \code{topoClean}: Break topologically clean areas. This is similar to \code{break}, except that it does not break loops. Topologically clean vectors may occur if the vector was imported from a format that does not enforce topology, such as a shapefile. Duplicate geometries are automatically removed after breaking.
\item \code{smallAreas}: Remove polygons smaller than \code{minArea}.
\item \code{remove0}: Remove all boundaries and lines with a length of 0.
\item \code{smallAngles}: Collapse lines that diverge at an angle that is computationally equivalent to 0.
}}

\item{tolerance}{Numeric or \code{NULL} (default): Minimum distance in map units (degrees for unprojected, usually meters for projected) or minimum area (for \code{smallAreas} in meters-squared, regardless of projection). If \code{NULL}, then 2\% of the minimum of the x-, y-, and z-extent will be used, or this same value but assumed to be in meters-squared (for \code{smallAreas}).}

\item{minArea}{Numeric >= 0: Minimum area of a polygon to be retained when using the \code{smallAreas} tool.}
}
\value{
A \code{GVector}.
}
\description{
\code{cleanGeom()} fixes geometries of a vector. These can include, for example, "dangling" lines, removing topologically incorrect features, or lines of zero length.
}
\examples{
if (grassStarted()) {

# Setup
library(sf)
library(terra)

# Example data
madCoast0 <- fastData("madCoast0")
madRivers <- fastData("madRivers")

### Simplify geometry (remove nodes)
####################################

rivers <- fast(madRivers)

vr <- simplifyGeom(rivers, tolerance = 2000)
dp <- simplifyGeom(rivers, tolerance = 2000, method = "dp")
dpr <- simplifyGeom(rivers, tolerance = 2000, method = "dpr", prop=0.5)
rw <- simplifyGeom(rivers, tolerance = 2000, method = "rw")

plot(st_geometry(madRivers), col="gray", lwd=3)
plot(vr, col="blue", add=TRUE)
plot(dp, col="red", add=TRUE)
plot(dpr, col="chartreuse", add=TRUE)
plot(rw, col="orange", add=TRUE)

legend("topright",
   legend = c(
	  "Original",
      "Vertex reduction",
      "Douglas-Peucker",
      "Douglas-Peucker reduction",
      "Reumann-Witkam"
	),
	col = c("gray", "blue", "red", "chartreuse", "orange"),
	lwd = c(3, 1, 1, 1, 1)
)

### Smooth geometry
###################

hermite <- smoothGeom(rivers, dist = 2000, angle = 3)
chaiken <- smoothGeom(rivers, method = "Chaiken", dist = 2000)

plot(st_geometry(madRivers), col="gray", lwd=2)
plot(hermite, col="blue", add=TRUE)
plot(chaiken, col="red", add=TRUE)

legend("topright",
   legend = c(
	  "Original",
      "Hermite",
      "Chaiken"
	),
	col = c("gray", "blue", "red"),
	lwd = c(2, 1, 1, 1, 1)
)

### Clean geometry
##################

noDangs <- cleanGeom(rivers, method = "removeDangles", tolerance = 2000)

plot(st_geometry(madRivers), col="blue")
plot(noDangs, col="red", add=TRUE)

legend("topright",
   legend = c(
	  "Original",
      "No dangles"
	),
	col = c("blue", "red")
)

}
}
\seealso{
\code{\link[=simplifyGeom]{simplifyGeom()}}, \code{\link[terra:simplify]{terra::simplifyGeom()}}, \code{\link[=smoothGeom]{smoothGeom()}}
}
