% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fasterWriteRaster.r
\name{fasterWriteRaster}
\alias{fasterWriteRaster}
\title{Save one or more rasters to disk directly from a GRASS session}
\usage{
fasterWriteRaster(
  rast,
  filename,
  overwrite = FALSE,
  datatype = NULL,
  trim = FALSE,
  compressTiff = "DEFLATE",
  bigTiff = FALSE,
  ...
)
}
\arguments{
\item{rast}{A \code{SpatRaster} with one or more layers, \emph{or} the name(s) of one or more raster in the active \code{GRASS} session.}

\item{filename}{Path and name of the raster file(s). If \code{rast} has more than one name, then you should state multiple file names, one per raster. The function will attempt to ascertain the type of the raster from the filename extension, but you can also set it using \code{format} (see the \code{...} argument).}

\item{overwrite}{If \code{FALSE} (default), do not save over existing file(s).}

\item{datatype}{The datatype of the values stored in non-ASCII rasters. If \code{NULL}, this will be taken from the raster (see \code{\link{fasterInfo}}. Alternatively, users can state the data type they desire.  This can any of:
\itemize{
\item \code{'INT1U'} or \code{'Byte'}: Integer values from 0 to 255
\item \code{'INT2U'} or \code{'UInt16'}: Integer values from 0 to 65,534
\item \code{'INT2S'} or \code{'Int16'}: Integer values from -32,767 to -32,767
\item \code{'INT4S'} or \code{'Int32'}: Integer values from -2,147,483,647 to 2,147,483,647
\item \code{'FLT4S'} or \code{'Float32'}: Values from -3.4e+38 to 3.4e+38, including decimal values
\item \code{'FLT8S'} or \code{'Float64'}: Values from -1.7e+308 to 1.7e+308, including decimal values
}
Note that the there are more types available. See \code{\href{https://grass.osgeo.org/grass82/manuals/r.out.gdal.html}{r.out.gdal}}.}

\item{trim}{If \code{TRUE}, then before saving, remove rows and columns that are entirely \code{NA} that have been added because the raster was imported into a \link{region} that was larger than it in at least one dimension. The default is \code{FALSE}.}

\item{compressTiff}{Type of compression for GeoTIFF files. The default is \code{'DEFLATE'}, but can be any of \code{'LZW'}, \code{'PACKBITS'}, \code{'LZMA'}, or \code{NULL}. If \code{NULL}, then no compression is conducted, but the file can be reduced in size by using zip, gzip, or other compressions.}

\item{bigTiff}{If \code{TRUE}, and the file format is a GeoTIFF and would be larger than 4 GB (regardless of compression), then the file will be saved in BIGTIFF format.}

\item{...}{Arguments to send to \code{\href{https://grass.osgeo.org/grass82/manuals/r.out.gdal.html}{thisRast.out.gdal}} and \code{\href{https://grass.osgeo.org/grass82/manuals/r.out.ascii.html}{r.out.ascii}}. These include a \code{format} argument, which explicitly states the file format. Some common formats include:
\itemize{
    \item \code{'GTiff'} (default): GeoTIFF (\code{filename} ends in \code{.tif})
    \item \code{'ASC'}: ASCII (\code{filename} ends in \code{.asc})
}
For the full list, please see \href{https://grass.osgeo.org/grass82/manuals/r.out.gdal.html}{r.out.gdal} and href{https://grass.osgeo.org/grass82/manuals/r.out.ascii.html}{r.out.ascii}. When using other formats, you may have to specify the \code{createopts} argument, too. \cr
For ASCII files, you may also need to state the number of significant digits saved using a \code{precision} argument. 32-bit values have 7 digits and 64-bit values have 16. So in these cases the argument would be \code{precision=7} or \code{precision=16}.}
}
\value{
A connecton to the written raster (invisibly). Also writes one or more files to disk.
}
\description{
This function saves a raster to disk directly from a \code{GRASS} session. If you want to save a raster from \code{R}, use \code{\link[terra]{writeRaster}} in the \pkg{terra} package.  However, if the raster in \code{R} was produced in \code{GRASS}, please consult \code{\link{writeRaster4}} for important details! Please note that rasters saved by \code{GRASS} can sometimes be much larger than their counterparts saved from \code{R}.
}
\examples{
\dontrun{

library(terra)

# change this according to where GRASS is installed on your system
grassDir <- 'C:/Program Files/GRASS GIS 8.2' # example for a PC
grassDir <- "/Applications/GRASS-8.2.app/Contents/Resources" # for a Mac

# start GRASS session with a raster
madElev <- fasterData('madElev')
initGrass(rast=madElev, grassDir=grassDir)

# import the raster back from GRASS
madElevImport <- rgrass::read_RAST('madElev', flags='quiet')

madElev
madElevImport

# Save in single- and double-precision floating-point formats...
# This is overkill and for this raster will result in a much larger file
# size than is necessary. This raster only has integers, so it could be
# saves with an appropriate "datatype" argument.
writeRaster4(madElevImport, './madElevImport4.tif')
writeRaster8(madElevImport, './madElevImport8.tif')

# best option for this example (smallest file size)
writeRaster(madElevImport, './madElevImportBest.tif', datatype='INT2S')

# save GeoTIFF directly from GRASS... actually smaller than the original!
fasterWriteRaster('madElev', filename='./madElevFromGrass.tif',
datatype='INT2S')

# save ASCII directly from GRASS
# NB Sometimes creates an error about XML, in which case you may need to
# restart R again... sorry, unsure what's going on here!
fasterWriteRaster('madElev', filename='./madElevFromGrass.asc')

}
}
\seealso{
\code{\link{writeRaster4}} and \code{\link{writeRaster8}} for saving a raster created in \code{GRASS} then imported to \code{R}; \code{\link[terra]{writeRaster}}
}
