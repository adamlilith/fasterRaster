% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/delaunay.r
\name{delaunay,GVector-method}
\alias{delaunay,GVector-method}
\alias{delaunay}
\title{Delaunay triangulation for points}
\usage{
\S4method{delaunay}{GVector}(x)
}
\arguments{
\item{x}{A \code{GVector} "points" object.}
}
\value{
A \code{GVector}.
}
\description{
This function creates a Delaunay triangulation from a "points" \code{GVector}.
}
\examples{
\dontrun{
# NB This example is in a "dontrun{}" block because it requires users to have
# GRASS GIS Version 8+ installed on their system.

# IMPORTANT #1: If you already have a GRASS session started, you will need to
# run the line below and the last line in this example to work with it again.
# If you have not started a GRASS session, you can skip this step and go to
# step #2.
opts. <- getFastOptions()

# IMPORTANT #2: Select the appropriate line below and change as necessary to
# where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.3.app/Contents/Resources" # Mac
grassDir <- "C:/Program Files/GRASS GIS 8.3" # Windows
grassDir <- "/usr/local/grass" # Linux

# setup
library(sf)

# example vectors
madDypsis <- fastData("madDypsis") # points
madCoast4 <- fastData("madCoast4") # polygons

# initiate GRASS session
faster(x = madDypsis, grassDir = grassDir,
workDir = tempdir(), location = "examples") # line only needed for examples

# convert sf vectors to GVectors
dypsis <- fast(madDypsis)
coast4 <- fast(madCoast4)
ant <- coast4[coast4$NAME_4 == "Antanambe"]

# Delaunay triangulation
dypsisDel <- delaunay(dypsis)
plot(dypsisDel)
plot(dypsis, pch = 1, col = "red", add = TRUE)

# Voronoi tessellation
vor <- voronoi(dypsis)
plot(vor)
plot(dypsis, pch = 1, col = "red", add = TRUE)

# Random Voronoi tessellation
rand <- rvoronoi(coast4, size = 100)
plot(rand)

# IMPORTANT #3: Revert back to original GRASS session if needed.
restoreSession(opts.)
removeSession("examples")

}
}
\seealso{
\code{\link[terra:voronoi]{terra::delaunay()}}, module \code{v.delaunay} in \strong{GRASS}
}
