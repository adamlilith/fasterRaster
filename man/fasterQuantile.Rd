% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fasterQuantile.r
\name{fasterQuantile}
\alias{fasterQuantile}
\title{Compute quantiles for a raster.}
\usage{
fasterQuantile(
  rast,
  probs = c(0.025, 0.25, 0.5, 0.75, 0.975),
  grassDir = NULL,
  alreadyInGrass = FALSE,
  ...
)
}
\arguments{
\item{rast}{Either a raster or the name of a raster in an existing GRASS session.}

\item{probs}{A numeric list of quantiles to calculate.}

\item{grassDir}{Character or \code{NULL} (default). Name of the directory in which GRASS is installed. Example: \code{'C:/Program Files/GRASS GIS 7.8'}. If this is \code{NULL}, R will search for the directory in which GRASS is installed. This usually fails, or if it succeeds, takes several minutes.}

\item{alreadyInGrass}{Logical, if \code{FALSE} (default) then start a new GRASS session and import the raster named in \code{rast}. If \code{FALSE}, use a raster already in GRASS with the name given by \code{rast}. The latter is useful if you are chaining \pkg{fasterRaster} functions together and the first function initializes the session. The first function should use \code{alreadyInGrass = FALSE} and subsequent functions should use \code{alreadyInGrass = TRUE} then use their \code{rast} (or \code{vect}) arguments to name the raster (or vector) that was made by the previous function.}

\item{...}{Arguments to pass to \code{\link[rgrass7]{execGRASS}}.}

\item{grassToR}{Logical, if \code{TRUE} (default) then the product of the calculations will be returned to R. If \code{FALSE}, then the product is left in the GRASS session and named \code{slope}, \code{aspect}, \code{profileCurve}, \code{tanCurve}, \code{eastWestSlope}, or \code{northSouthSlope}. The latter case is useful (and faster) when chaining several \pkg{fasterRaster} functions together.}
}
\value{
A named vector of the values for each quantile named in \code{probs}.
}
\description{
This function is a potentially faster version of the function \code{quantile(raster, probs)} for calculating the quantiles of a raster. This function will also work on rasters too big to load into memory using the \pkg{raster} package.
}
\details{
See \href{r.quantile}{https://grass.osgeo.org/grass78/manuals/r.quantile.html} for more details.  Note that if you get an error saying "", then you should add the EPSG code to the beginning of the raster and vector coordinate reference system string (its "proj4string"). For example, \code{proj4string(x) <- CRS('+init=epsg:32738')}. EPSG codes for various projections, datums, and locales can be found at \href{Spatial Reference}{http://spatialreference.org/}.
}
\examples{
\donttest{
# change this according to where GRASS 7 is installed on your system
grassDir <- 'C:/Program Files/GRASS GIS 7.8'

data(madForest2000)

# calculate distance to forest
distToForest <- fasterRastDistance(rast=madForest2000, grassDir=grassDir)

# calculate quantiles
probs <- c(0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.975)
quants <- fasterQuantile(rast=distToForest, probs=probs, grassDir=grassDir)
quants
# same as quantile() for a raster:
quantile(distToForest, probs=probs, na.rm=TRUE)
}
}
\seealso{
\code{\link[stats]{quantile}} in the \pkg{base} package and \code{\link[raster]{quantile}} in the \pkg{raster} package
}
