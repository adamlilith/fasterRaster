% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.r
\name{plot,GRaster,missing-method}
\alias{plot,GRaster,missing-method}
\alias{plot}
\alias{plot,GVector,missing-method}
\title{Display a raster or vector}
\usage{
\S4method{plot}{GRaster,missing}(x, y, maxcell = 5e+06, ...)

\S4method{plot}{GVector,missing}(x, y, maxGeoms = 10000, ...)
}
\arguments{
\item{x}{A \code{GRaster} or \code{GVector}.}

\item{y}{Missing--leave as empty.}

\item{maxcell}{Positive integer (rasters only): Maximum number of cells a raster can have before it is simplified before saving to disk then plotted. The \code{\link[=aggregate]{aggregate()}} function will be applied so that it has approximately this number of cells. The default is 5000000.}

\item{...}{Other arguments to send to \code{\link[terra:plot]{terra::plot()}}.}

\item{maxGeoms}{Positive integer (vectors only): Maximum number of features before vector simplification is applied before saving to disk then creating a \code{SpatVector} for plotting. The default is 10000.}
}
\value{
Nothing (displays a raster or vector).
}
\description{
\code{plot()} displays a \code{GRaster} or \code{GVector}.

This function is essentially a hack, as it it not possible to dependably call the appropriate \strong{GRASS} modules and display a raster or vector without potential confusion on the user side. Instead, this function 1) simplifies the focal \code{GRaster} or \code{GVector} (if needed); 2) writes it to disk as a \code{SpatRaster} or \code{SpatVector}; and 3) plots the object using \code{\link[terra:plot]{terra::plot()}}. Thus, if you are interested in making maps, it will always be faster to make them directly with \strong{terra}.
}
\examples{
if (grassStarted()) {

# Setup
library(terra)

# Example data
madElev <- fastData("madElev") # elevation raster
madLANDSAT <- fastData("madLANDSAT") # multi-layer raster
madRivers <- fastData("madRivers") # lines vector

# Convert SpatRaster to GRaster and SpatVector to GVector
elev <- fast(madElev)
rivers <- fast(madRivers)
land <- fast(madLANDSAT, checkCRS = FALSE) # NB Need checkCRS = FALSE for this
# raster... We know it has the same CRS as the location, so this is OK, but
# checkCRS = TRUE (default behavior) does not work.

# Plot:
plot(elev)
plot(rivers, add = TRUE)

# Histograms:
hist(elev)
hist(land)

# Plot surface reflectance in RGB:
plotRGB(land, 3, 2, 1) # "natural" color
plotRGB(land, 4, 1, 2, stretch = "lin") # emphasize near-infrared (vegetation)

# Make composite map from RGB layers and plot in grayscale:
comp <- compositeRGB(r = land[[3]], g = land[[2]], b = land[[1]])
grays <- paste0("gray", 0:100)
plot(comp, col = grays)

}
}
\seealso{
\code{\link[terra:plot]{terra::plot()}}
}
