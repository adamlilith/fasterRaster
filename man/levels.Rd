% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/levels.r
\name{levels,GRaster-method}
\alias{levels,GRaster-method}
\alias{levels}
\alias{cats,GRaster-method}
\alias{cats}
\alias{levels<-,GRaster,data.frame-method}
\alias{levels<-}
\alias{levels<-,GRaster,data.table-method}
\alias{levels<-,GRaster,SpatRaster-method}
\alias{levels<-,GRaster,list-method}
\alias{categories,GRaster-method}
\alias{categories}
\alias{addCats,GRaster-method}
\alias{addCats}
\alias{droplevels,GRaster-method}
\alias{droplevels}
\alias{missingCats,GRaster-method}
\alias{missingCats}
\title{Set and get categories for categorical rasters}
\usage{
\S4method{levels}{GRaster}(x)

\S4method{cats}{GRaster}(x, layer = 1:nlyr(x))

\S4method{levels}{GRaster,data.frame}(x) <- value

\S4method{levels}{GRaster,data.table}(x) <- value

\S4method{levels}{GRaster,SpatRaster}(x) <- value

\S4method{levels}{GRaster,list}(x) <- value

\S4method{categories}{GRaster}(x, layer = 1, value, active = 1)

\S4method{addCats}{GRaster}(x, value, merge = FALSE, layer = 1)

\S4method{droplevels}{GRaster}(x, level = NULL, layer = 1)

\S4method{missingCats}{GRaster}(x)
}
\arguments{
\item{x}{A \code{GRaster}.}

\item{layer}{Numeric integers: Layer(s) from which to drop levels.}

\item{value}{A \code{data.frame}, \code{data.table}, a list of \code{data.frames} or \code{data.tables} with one per raster layer, or a categorical \code{SpatRaster}. The table's first column is the "value" column and must contain numeric values (of class \code{numeric} or \code{character}). If a \code{SpatRaster} is supplied, then its categories will be transferred to the \code{GRaster}.}

\item{level}{Numeric, integer, character, or \code{NULL} (default): Level(s) to remove. Levels cane be specified by their integer (numeric) value or category label. \code{NULL} removes all levels not represented in the raster.}
}
\value{
Values returned are:
\code{levels}: A list of \code{data.frame}s or \code{data.table}s, one per raster.
\code{cats}: A list of \code{data.frame}s or \code{data.table}s, one per raster.
\verb{levels <-}: A categorical \code{GRaster}.
\code{categories}: A categorical \code{GRaster}.
}
\description{
\code{GRaster}s can represent \link[=tutorial_raster_data_types]{categorical data}. Cell values are actually integers, each corresponding to a category, such as "desert" or "wetland." A categorical raster is associated with a table that matches each value to a category name. The table must be \code{NULL} (i.e., no categories--so not a categorical raster), or have at least two columns. The first column must have integers and represent raster values. One or more subsequent columns must have category labels.

Several functions help manage categorical rasters:
\itemize{
\item \code{levels()}: Reports category values and their labels. Only the values and active column is reported.
\item \code{cats()}: Reports category values and their labels. The entire table is returned.
\item \verb{levels() <-}: Assign category values and their labels to all layers.
\item \code{categories()}: Assign category values and their labels to specific layers.
\item \code{addCats()}: Add categories (rows) or columns to the levels table of a categorical raster.
\item \code{missingCats()}: Identifies values that have no assigned category.
\item \code{\link[=nlevels]{nlevels()}}: Number of levels in each raster.
\item \code{\link[=activeCat]{activeCat()}}: Retrieve the column index or name of the category labels.
\item \link{activeCat() <-}: Set the column index or name of the category labels.
\item droplevels(): Removes levels that are not represented in the raster.
}
}
\examples{
\dontrun{
# NB This example is in a "dontrun{}" block because it requires users to have
# GRASS GIS Version 8+ installed on their system.

# IMPORTANT #1: If you already have a GRASS session started, you will need to
# run the line below and the last line in this example to work with it again.
# If you have not started a GRASS session, you can skip this step and go to
# step #2.
opts. <- getFastOptions()

# IMPORTANT #2: Select the appropriate line below and change as necessary to
# where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.3.app/Contents/Resources" # Mac
grassDir <- "C:/Program Files/GRASS GIS 8.3" # Windows
grassDir <- "/usr/local/grass" # Linux

# Setup
library(terra)

# Example data: Land cover raster
madCover <- fastData("madCover")

# Start GRASS session for examples only
faster(x = madCover, grassDir = grassDir,
workDir = tempdir(), location = "examples") # line only needed for examples

# Convert categorical SpatRaster to categorical GRaster:
cover <- fast(madCover)

# Properties of categorical rasters:
cover # note categories
is.factor(cover) # Is the raster categorical?
nlevels(cover) # number of levels
levels(cover) # just the value and active column
cats(cover) # all columns
minmax(cover) # min/max values
minmax(cover, levels = TRUE) # min/max categories


# Remove unused levels:
nlevels(cover)
cover <- droplevels(cover)
nlevels(cover)

# Which column sets the category labels?
activeCat(cover)

# Choose a different column for category labels:
levels(cover)
activeCat(cover) <- 2
levels(cover)


# Re-assign levels:
vals <- freq(cover)
value <- c(20, 30, 40, 50, 120, 130, 140, 170, 210)
label <- c("Cropland", "Cropland", "Forest", "Forest", "Forest", "Shrubland", "Herbaceous", "Flooded", "Water")

cats <- data.frame(value = value, label = label)
cover <- categories(cover, layer = 1, value = cats)
levels(cover)

# We can implement logical operations on categorical rasters:
cover < "Forest" # 1 for cells with a value < 40, 0 otherwise
cover <= "Forest" # 1 for cells with a value < 120, 0 otherwise
cover == "Forest" # 1 for cells with value of 40-120, 0 otherwise
cover != "Forest" # 1 for cells with value that is not 40-120, 0 otherwise
cover > "Forest" # 1 for cells with a value > 120, 0 otherwise
cover >= "Forest" # 1 for cells with a value >= 120, 0 otherwise

cover \%in\% c("Cropland", "Forest") # 1 for cropland/forest cells, 0 otherwise

# IMPORTANT #3: Revert back to original GRASS session if needed.
fastRestore(opts.)
removeSession("examples")

}
}
\seealso{
\code{\link[=nlevels]{nlevels()}}, \code{\link[terra:factors]{terra::cats()}}, \code{\link[terra:factors]{terra::levels()}}, \code{\link[terra:factors]{terra::addCats()}}, \code{\link[terra:factors]{terra::droplevels()}}, \link[=tutorial_raster_data_types]{categorical rasters}
}
