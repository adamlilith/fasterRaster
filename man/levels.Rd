% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/categories.r, R/levels.r
\name{categories,GRaster-method}
\alias{categories,GRaster-method}
\alias{categories}
\alias{levels<-,GRaster,data.frame-method}
\alias{levels<-}
\alias{levels<-,GRaster,data.table-method}
\alias{levels<-,GRaster,SpatRaster-method}
\alias{levels<-,GRaster,list-method}
\alias{levels,GRaster-method}
\alias{levels}
\alias{cats,GRaster-method}
\alias{cats}
\alias{missingCats,GRaster-method}
\alias{missingCats}
\title{Set categories for categorical rasters}
\usage{
\S4method{categories}{GRaster}(x, layer = 1, value, active = 1)

\S4method{levels}{GRaster,data.frame}(x) <- value

\S4method{levels}{GRaster,data.table}(x) <- value

\S4method{levels}{GRaster,SpatRaster}(x) <- value

\S4method{levels}{GRaster,list}(x) <- value

\S4method{levels}{GRaster}(x)

\S4method{cats}{GRaster}(x, layer = 1:nlyr(x))

\S4method{missingCats}{GRaster}(x, layer = 1:nlyr(x))
}
\arguments{
\item{x}{A \code{GRaster}.}

\item{layer}{Numeric integers, logical vector, or character: Layer(s) for which to obtain levels.}

\item{value}{A \code{data.frame}, \code{data.table}, a list of \code{data.frames} or \code{data.tables} with one per raster layer, or a categorical \code{SpatRaster}. The table's first column is the "value" column and must contain numeric values (of class \code{numeric} or \code{character}). If a \code{SpatRaster} is supplied, then its categories will be transferred to the \code{GRaster}.}

\item{active}{Numeric (\code{categories()}): The active category column for the new "levels" table. The first column (with values) is ignored, so an active column of 1 actually refers to the second column, 2 to the third, and so on.}

\item{level}{Numeric, integer, character, or \code{NULL} (default): Level(s) to remove. Levels can be specified by their integer (numeric) value or category label. \code{NULL} removes all levels not represented in the raster.}

\item{merge}{Logical (\code{addCats()}): If \code{FALSE} (default), columns will be combined with the existing "levels" table using \code{\link[=cbind]{cbind()}}. If \code{TRUE}, they will be combined using \code{\link[data.table:merge]{data.table::merge()}}.}
}
\value{
Values returned are:
\itemize{
\item \code{addCats()} and \verb{addCats<-}: A \code{GRaster}.
\item \code{categories()}: A categorical \code{GRaster}.
\item \code{droplevels()}: A \code{GRaster}.
\item \verb{levels <-}: A categorical \code{GRaster}.
}

Values returned are:
\itemize{
\item \code{levels()}: A list of \code{data.frame}s or \code{data.table}s, one per raster.
\item \code{cats()}: A list of \code{data.frame}s or \code{data.table}s, one per raster.
\item \code{activeCat()}: An integer vector or character vector.
}
}
\description{
\code{GRaster}s can represent \link[=tutorial_raster_data_types]{categorical data}. Cell values are actually integers, each corresponding to a category, such as "desert" or "wetland." A categorical raster is associated with a "levels" table that matches each value to a category name. The table must be \code{NULL} (i.e., no categories--so not a categorical raster), or have at least two columns. The first column must have integers and represent raster values. One or more subsequent columns must have category labels. The column with these labels is the "active category".

Several functions help manage categorical rasters. \strong{The functions described here are all used to create categorical rasters by adding a "levels" table, replacing the table or adding to to it, or removing categories from the table.}
\itemize{
\item \code{\link[=levels]{levels()}}`: Reports category values and their labels. Only the values and active column is reported.
\item \code{\link[=cats]{cats()}}: Reports category values and their labels. The entire table is returned.
\item \verb{levels<-}: Assign category values and their labels to all layers.
\item `categories()``: Assign category values and their labels to specific layers.
\item \verb{addCats<-}: Add values and categories (rows) to the levels table of a categorical raster.
\item \code{addCats()}: Add new columns to a levels table using \code{\link[data.table:merge]{data.table::merge()}} or \code{\link[=cbind]{cbind()}}. This does not add new rows to the table.
\item \code{\link[=catNames]{catNames()}}: Column names of each levels table.
\item \code{\link[=missingCats]{missingCats()}}: Values in the raster that have no assigned category.
\item \code{\link[=nlevels]{nlevels()}}: Number of levels in each raster.
\item \code{\link[=activeCat]{activeCat()}}: Column index or name of the category labels.
\item \link{activeCat<-}: Set the column of the category labels.
\item droplevels(): Removes levels that are not represented in the raster.
\item \code{\link[=freq]{freq()}}: Frequency of each category across cells of a raster\cr
}

\code{GRaster}s can represent \link[=tutorial_raster_data_types]{categorical data}. Cell values are actually integers, each corresponding to a category, such as "desert" or "wetland." A categorical raster is associated with a table that matches each value to a category name. The table must be \code{NULL} (i.e., no categories--so not a categorical raster), or have at least two columns. The first column must have integers and represent raster values. One or more subsequent columns must have category labels. The column with these labels is the "active category".

Several functions help manage categorical rasters. \strong{The functions described here return information about the "levels" table(s) of a categorical raster.}
\itemize{
\item \code{levels()}: Reports category values and their labels. Only the values and active column is reported.
\item \code{cats()}: Reports category values and their labels. The entire table is returned.
\item \link{levels<-}: Assign category values and their labels to all layers.
\item \code{\link[=categories]{categories()}}: Assign category values and their labels to specific layers.
\item \link{addCats<-}: Add values and categories (rows) to the levels table of a categorical raster.
\item \code{\link[=addCats]{addCats()}}: Add new columns to a levels table using \code{\link[data.table:merge]{data.table::merge()}} or \code{\link[=cbind]{cbind()}}. This does not add new rows to the table.
\item \code{catNames()}: Column names of each levels table.
\item \code{missingCats()}: Values in the raster that have no assigned category.
\item \code{\link[=nlevels]{nlevels()}}: Number of levels in each raster.
\item \code{\link[=activeCat]{activeCat()}}: Column index or name of the category labels.
\item \link{activeCat<-}: Set the column of the category labels.
\item \code{\link[=droplevels]{droplevels()}}: Removes levels that are not represented in the raster.
\item \code{\link[=freq]{freq()}}: Frequency of each category across cells of a raster\cr
}
}
\examples{
\dontrun{
# NB This example is in a "dontrun{}" block because it requires users to have
# GRASS GIS Version 8+ installed on their system.

# IMPORTANT #1: If you already have a GRASS session started, you will need to
# run the line below and the last line in this example to work with it again.
# If you have not started a GRASS session, you can skip this step and go to
# step #2.
opts. <- getFastOptions()

# IMPORTANT #2: Select the appropriate line below and change as necessary to
# where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.3.app/Contents/Resources" # Mac
grassDir <- "C:/Program Files/GRASS GIS 8.3" # Windows
grassDir <- "/usr/local/grass" # Linux

# Setup
library(terra)

# Example data: Land cover raster
madCover <- fastData("madCover")

# Start GRASS session for examples only
faster(x = madCover, grassDir = grassDir,
workDir = tempdir(), location = "examples") # line only needed for examples

# Convert categorical SpatRaster to categorical GRaster:
cover <- fast(madCover)

### Properties of categorical rasters
#####################################

cover # note categories
is.factor(cover) # Is the raster categorical?
nlevels(cover) # number of levels
levels(cover) # just the value and active column
cats(cover) # all columns
minmax(cover) # min/max values
minmax(cover, levels = TRUE) # min/max categories
catNames(cover) # column names of the levels table
missingCats(cover) # categories in table with no values in raster
freq(cover) # frequency of each category (number of cells)

### Active column
#################

# Which column sets the category labels?
activeCat(cover)
activeCat(cover, names = TRUE)

# Choose a different column for category labels:
levels(cover)
activeCat(cover) <- 2
levels(cover)

### Managing levels tables
##########################

# Remove unused levels:
nlevels(cover)
cover <- droplevels(cover)
nlevels(cover)

# Re-assign levels:
value <- c(20, 30, 40, 50, 120, 130, 140, 170)
label <- c("Cropland", "Cropland", "Forest", "Forest", "Grassland", "Shrubland", "Herbaceous", "Flooded")

newCats <- data.frame(value = value, label = label)

cover <- categories(cover, layer = 1, value = newCats)
cats(cover)

# This is the same as:
levels(cover) <- newCats
cats(cover)

# Are there any values not assigned a category?
missingCats(cover)

# Let's assign a category for value 210 (water):
water <- data.frame(value = 210, label = "Water")
addCats(cover) <- water

# Add more information to the levels table using merge():
landType <- data.frame(
     Value = c(20, 30, 40, 50, 120),
     Type = c("Irrigated", "Rainfed", "Broadleaf evergreen", "Broadleaf deciduous", "Mosaic with forest")
)
cats(cover)
cover <- addCats(cover, landType, merge = TRUE)
cats(cover)

### Logical operations on categorical rasters
#############################################

cover < "Forest" # 1 for cells with a value < 40, 0 otherwise
cover <= "Forest" # 1 for cells with a value < 120, 0 otherwise
cover == "Forest" # 1 for cells with value of 40-120, 0 otherwise
cover != "Forest" # 1 for cells with value that is not 40-120, 0 otherwise
cover > "Forest" # 1 for cells with a value > 120, 0 otherwise
cover >= "Forest" # 1 for cells with a value >= 120, 0 otherwise

cover \%in\% c("Cropland", "Forest") # 1 for cropland/forest cells, 0 otherwise

# IMPORTANT #3: Revert back to original GRASS session if needed.
fastRestore(opts.)
removeSession("examples")

}
\dontrun{
# NB This example is in a "dontrun{}" block because it requires users to have
# GRASS GIS Version 8+ installed on their system.

# IMPORTANT #1: If you already have a GRASS session started, you will need to
# run the line below and the last line in this example to work with it again.
# If you have not started a GRASS session, you can skip this step and go to
# step #2.
opts. <- getFastOptions()

# IMPORTANT #2: Select the appropriate line below and change as necessary to
# where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.3.app/Contents/Resources" # Mac
grassDir <- "C:/Program Files/GRASS GIS 8.3" # Windows
grassDir <- "/usr/local/grass" # Linux

# Setup
library(terra)

# Example data: Land cover raster
madCover <- fastData("madCover")

# Start GRASS session for examples only
faster(x = madCover, grassDir = grassDir,
workDir = tempdir(), location = "examples") # line only needed for examples

# Convert categorical SpatRaster to categorical GRaster:
cover <- fast(madCover)

### Properties of categorical rasters
#####################################

cover # note categories
is.factor(cover) # Is the raster categorical?
nlevels(cover) # number of levels
levels(cover) # just the value and active column
cats(cover) # all columns
minmax(cover) # min/max values
minmax(cover, levels = TRUE) # min/max categories
catNames(cover) # column names of the levels table
missingCats(cover) # categories in table with no values in raster
freq(cover) # frequency of each category (number of cells)

### Active column
#################

# Which column sets the category labels?
activeCat(cover)
activeCat(cover, names = TRUE)

# Choose a different column for category labels:
levels(cover)
activeCat(cover) <- 2
levels(cover)

### Managing levels tables
##########################

# Remove unused levels:
nlevels(cover)
cover <- droplevels(cover)
nlevels(cover)

# Re-assign levels:
value <- c(20, 30, 40, 50, 120, 130, 140, 170)
label <- c("Cropland", "Cropland", "Forest", "Forest", "Grassland", "Shrubland", "Herbaceous", "Flooded")

newCats <- data.frame(value = value, label = label)

cover <- categories(cover, layer = 1, value = newCats)
cats(cover)

# This is the same as:
levels(cover) <- newCats
cats(cover)

# Are there any values not assigned a category?
missingCats(cover)

# Let's assign a category for value 210 (water):
water <- data.frame(value = 210, label = "Water")
addCats(cover) <- water

# Add more information to the levels table using merge():
landType <- data.frame(
     Value = c(20, 30, 40, 50, 120),
     Type = c("Irrigated", "Rainfed", "Broadleaf evergreen", "Broadleaf deciduous", "Mosaic with forest")
)
cats(cover)
cover <- addCats(cover, landType, merge = TRUE)
cats(cover)

### Logical operations on categorical rasters
#############################################

cover < "Forest" # 1 for cells with a value < 40, 0 otherwise
cover <= "Forest" # 1 for cells with a value < 120, 0 otherwise
cover == "Forest" # 1 for cells with value of 40-120, 0 otherwise
cover != "Forest" # 1 for cells with value that is not 40-120, 0 otherwise
cover > "Forest" # 1 for cells with a value > 120, 0 otherwise
cover >= "Forest" # 1 for cells with a value >= 120, 0 otherwise

cover \%in\% c("Cropland", "Forest") # 1 for cropland/forest cells, 0 otherwise

# IMPORTANT #3: Revert back to original GRASS session if needed.
fastRestore(opts.)
removeSession("examples")

}
}
\seealso{
\code{\link[=levels]{levels()}}, \code{\link[=cats]{cats()}}, \code{\link[=catNames]{catNames()}}, \code{\link[=missingCats]{missingCats()}}, \code{\link[=activeCat]{activeCat()}}, \link{activeCat<-}, \code{\link[=freq]{freq()}}, \code{\link[=nlevels]{nlevels()}}, \code{\link[terra:factors]{terra::cats()}}, \code{\link[terra:factors]{terra::levels()}}, \code{\link[terra:factors]{terra::addCats()}}, \code{\link[terra:factors]{terra::droplevels()}}, \link[=tutorial_raster_data_types]{categorical rasters} in \strong{fasterRaster}

\link{levels<-}, \code{\link[=catNames]{catNames()}}, \code{\link[=missingCats]{missingCats()}}, \link{activeCat<-}, \code{\link[=freq]{freq()}}, \code{\link[=nlevels]{nlevels()}}, \code{\link[terra:factors]{terra::cats()}}, \code{\link[terra:factors]{terra::levels()}}, \code{\link[terra:factors]{terra::addCats()}}, \code{\link[terra:factors]{terra::droplevels()}}, \link[=tutorial_raster_data_types]{categorical rasters} in \strong{fasterRaster}
}
