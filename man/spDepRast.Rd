% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spDepRast.r
\name{spDepRast,GRaster-method}
\alias{spDepRast,GRaster-method}
\alias{spDepRast}
\title{Create a random raster with or without spatial dependence}
\usage{
\S4method{spDepRast}{GRaster}(
  x,
  n = 1,
  mu = 0,
  sigma = 1,
  dist = 0,
  exponent = 1,
  delay = 0,
  seed = NULL
)
}
\arguments{
\item{x}{A \code{GRaster}. The output will have the same extent and dimensions as this raster.}

\item{n}{A numeric integer: Number of rasters to generate.}

\item{mu, sigma}{Numeric: Mean and sample standard deviation of output. If creating more than one raster, you can provide one value per raster. If there are fewer, they will be recycled.}

\item{dist}{Numeric: Maximum distance of spatial autocorrelation (in map units--typically meters). Default is 0 (no spatial autocorrelation). If creating more than one raster, you can provide one value per raster. If there are fewer, values will be recycled.}

\item{exponent}{Numeric > 0: Distance decay exponent. If creating more than one raster, you can provide one value per raster. If there are fewer, values will be recycled.}

\item{delay}{Numeric >= 0: Values >0 force the distance decay of similarity to remain constant up to this distance. Beyond this distance, the decay exponent takes effect. Default is 0. If creating more than one raster, you can provide one value per raster. If there are fewer, values will be recycled.}

\item{seed}{Numeric integer or \code{NULL}: Random seed. If \code{NULL}, then a random seed is used for each raster. If provided, there should be one seed value per raster.}
}
\value{
A \code{GRaster}.
}
\description{
'spDepRast()' creates a raster with random values in cells. Across the raster, values are approximately normally distributed, though a raster with a "true" normal distribution can be made with \code{\link[=rnormRast]{rnormRast()}}. Spatial dependence can be introduced, though all together the values will still be approximately normally distributed.
}
\examples{
\dontrun{
# NB This example is in a "dontrun{}" block because it requires users to have
# GRASS GIS Version 8+ installed on their system.

# IMPORTANT #1: If you already have a GRASS session started, you will need to
# run the line below and the last line in this example to work with it again.
# If you have not started a GRASS session, you can skip this step and go to
# step #2.
opts. <- getFastOptions()

# IMPORTANT #2: Select the appropriate line below and change as necessary to
# where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.3.app/Contents/Resources" # Mac
grassDir <- "C:/Program Files/GRASS GIS 8.3" # Windows
grassDir <- "/usr/local/grass" # Linux

# setup
library(sf)
library(terra)

# elevation raster
madElev <- fastData("madElev")

# start GRASS session for examples only
faster(x = madElev, grassDir = grassDir,
workDir = tempdir(), location = "examples") # line only needed for examples

# Convert a SpatRaster to a GRaster:
elev <- fast(madElev)

# Create a raster with values drawn from a uniform distribution:
unif <- runifRast(elev)
plot(unif)

unifs <- runifRast(elev, 2, -1, 1)
plot(unifs)

# Create a raster with values drawn from a normal distribution:
norms <- rnormRast(elev, n = 2, mu = c(5, 10), sigma = c(2, 1))
plot(norms)

ns <- rast(norms)
hist(ns[[1]], breaks = 100)

# Create a raster with random, seemingly normally-distributed values:
rand <- spDepRast(elev)
plot(rand)

# Values appear normal on first inspection:
r <- rast(rand)
hist(r)

# ... but actually are patterned:
hist(r, breaks = 100)

# Create a raster with random, normally-distributed values with
# spatial dependence. This can take a few minutes.
spatDep <- spDepRast(elev, dist = 3000)
plot(spatDep)

# Create a fractal raster:
fractal <- fractalRast(elev, n = 2, dimension = c(2.1, 2.8))
plot(fractal)

# IMPORTANT #3: Revert back to original GRASS session if needed.
fastRestore(opts.)
removeSession("examples")

}
}
\seealso{
\code{\link[=rnormRast]{rnormRast()}}, \code{\link[=fractalRast]{fractalRast()}}, \code{\link[=runifRast]{runifRast()}}, and \strong{GRASS} module \code{r.random.surface}
}
