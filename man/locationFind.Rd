% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/locationFind.r
\name{.locationFind,missing-method}
\alias{.locationFind,missing-method}
\alias{.locationFind,GLocation-method}
\alias{.locationFind,SpatRaster-method}
\alias{.locationFind,SpatVector-method}
\alias{.locationFind,sf-method}
\alias{.locationFind,character-method}
\title{Match CRS of a GSpatial object and an existing "GRASS" location}
\usage{
\S4method{.locationFind}{missing}(x, return = "name")

\S4method{.locationFind}{GLocation}(x, return = "name", match = "name")

\S4method{.locationFind}{SpatRaster}(x, return = "name", match = "name")

\S4method{.locationFind}{SpatVector}(x, return = "name", match = "name")

\S4method{.locationFind}{sf}(x, return = "name", match = "name")

\S4method{.locationFind}{character}(x, return = "name", match = "name")
}
\arguments{
\item{x}{Either:
\itemize{
\item Missing: Returns names and coordinate reference system strings of all "locations".
\item A character representing a coordinate reference system in WKT format
\item A \code{SpatRaster}, \code{SpatVector}, or \code{sf} vector
\item A \code{GSpatial} object (usually a \code{GRaster} or \code{GVector})
}}

\item{return}{Either:
\itemize{
\item \code{"name"} (default): Returns the name of the "location" with a coordinate reference system the same as \code{x}.
\item \code{"index"}: Returns the index of this "location".
\item \code{"crs"}: Returns the coordinate reference system of this "location".
}}

\item{match}{Character: Method used to find the location. If \code{match} is "\code{name}"" (default), then the name of the location is used. If \code{match} is "\code{crs}", then the coordinate reference system of each location is checked for a match.}
}
\value{
Character, integer, or \code{NULL} (if no match is found).
}
\description{
The function searches the set of available \strong{GRASS} "locations" for one that has a coordinate reference system matching a \code{GSpatial} object. If none are found, or if no connection with \strong{GRASS} has yet been made, then it returns \code{NULL}. Otherwise, it returns either the index or the name of the matching location.
}
\examples{
if (grassStarted()) {

# Setup
library(terra)

# Example data
madElev <- fastData("madElev")
madChelsa <- fastData("madChelsa")
madChelsa1 <- madChelsa[[1]]

# Convert SpatRasters to GRasters.
# Each raster has a different CRS so will be put into a different location.
elev <- fast(madElev)
chelsa1 <- fast(madChelsa1)

# Name of the currently active location
.location()
.location(elev)
.location(chelsa1)

# All available GRASS locations
.locations()

# Find location of an object among all active locations
.locationFind(elev)
.locationFind(chelsa1)
.locationFind(chelsa1, return = "index")
.locationFind(chelsa1, return = "crs")

# Switch between locations
.locationRestore(elev)
.locationRestore(chelsa1)

loc <- .location(elev)
.locationRestore(loc)

# We could use .locationDelete(elev) to delete
# the location where "elev" is stored.

# Mapsets are always "PERMANENT" in fasterRaster
.mapset()
.mapset(elev)
.mapset(chelsa1)

}
}
\keyword{internal}
