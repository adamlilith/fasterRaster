% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regionReshape.r
\name{regionReshape}
\alias{regionReshape}
\title{Change the extent and dimensions of a region simultaneously}
\usage{
regionReshape(x, extent = NULL, dim = NULL, res = NULL, warn = TRUE)
}
\arguments{
\item{x}{Any of:
\itemize{
\item \code{NULL} (default): Reports the extent, resolution, and dimensions of the current region. All other arguments will be ignored.
\item A \code{SpatRaster} object: Sets the region's extent and dimensions to those of the raster. Note that this does not export the raster to the \code{GRASS} session.
\item The name of a raster in the active \code{GRASS} session: Resizes the extent and dimensions to those of this raster.
\item Values for each of \code{extent} and \emph{either} \code{dim} or \code{res} ("manual" model):
\itemize{
    \item \code{extent}: Longitude and latitude of the new extent with four values listed in this order: western longitude, eastern longitude, southern latitude, northern latitude.
    \item \code{dim}: Two integers representing number of rows and columns, respetively, in the region. The new resolution will be calculated by dividing the extent by the number of rows and columns.
    \item \code{res}: One or two values representing spatial resolution of the region. If one value, it will be used as both the east-west and north-south resolution. If two values, these represent east-west and north-south resolution, respectively. The new dimensions will be calculated by dividing the extent by the resolution. If this is not a whole number, the extent will be increased to accomodate an integer number of rows and columns.
}
}}

\item{extent, dim, res}{Extent, dimensions, and resolution of the new region. These need only be specified if the region is to be resized and/or resampled "manually" (i.e., not using a pre-existing raster). In this case, \code{extent} must always be specified, and either \code{dim} or \code{res} must be specified. To change only extent, dimension, or resolution, use \code{\link{regionExt}}, \code{\link{regionDim}}, or \code{\link{regionRes}}.}

\item{warn}{If \code{TRUE} (default), then print a warning if redefining the region resolution also forced a change in extent.}
}
\value{
Either a list, or \code{TRUE} (invisibly) if resizing and resampling was successful. Also resizes and resamples the \link{region} in the active \code{GRASS} session.
}
\description{
This function simultaneously changes the extent and dimensions of a \code{GRASS} \link{region}.
}
\examples{
\dontrun{

# IMPORTANT: These function use the "location", "restartGrass", and
# "warn" arguments to avoid interfering with an existing GRASS session.
# WHEN YOU ARE DONE WITH THE EXAMPLES, run this line to revert to your
# active GRASS session:
# initGrass(location='default') # change "location" if not "default"

# IMPORTANT: Change this to where GRASS is installed on your system.
grassDir <- "/Applications/GRASS-8.2.app/Contents/Resources" # for a Mac
grassDir <- 'C:/Program Files/GRASS GIS 8.2' # example for a PC

library(sf)
library(terra)

# get data
madElev <- fasterData('madElev') # large raster
madElevAnt <- fasterData('madElevAnt') # small raster
madRivers <- fasterData('madRivers') # small vector

### initiate a GRASS session and export a large raster
initGrass(rast=madElev, grassDir=grassDir,
restartGrass=TRUE, warn=FALSE, location='examples')

# export the smaller raster and vector
fasterRast(madElevAnt)
fasterVect(madRivers, inVectName='madRivers')

### region properties
regionExt() # extent
regionNcell() # number of cells
regionDim() # dimensions
regionNrow() # rows
regionNcol() # columns

# extent of spatial objects
fasterExt('madElev') # large raster
fasterExt('madElevAnt') # small raster
fasterExt('madElevMan') # small raster
fasterExt('madRivers') # small vector
fasterExt() # extent of all combined

# extent of region (same as largest raster)
regionExt()

### resize region using small raster already in GRASS
regionChangeExt('madElevAnt')
fasterExtRegion()

# import the large raster to R using this region
cropped <- rgrass::read_RAST('madElev', flags='quiet')

# plot: larger raster has been cropped!
plot(madElev, col=paste0('gray', 1:80), main='Cropped')
plot(cropped, legend=FALSE, add=TRUE)

### resize region using small vector already in GRASS
regionResize('madRivers')
fasterExtRegion()

# import the large raster using this region
cropped <- rgrass::read_RAST('madElev', flags='quiet')

# plot: larger raster has been cropped!
plot(madElev, col='red', main='Cropped', legend=FALSE)
plot(cropped, add=TRUE)
plot(st_geometry(madRivers), col='yellow', add=TRUE)

### resize region using a small raster in R
regionResize(madElevMan)
fasterExtRegion()

# import the large raster into R using this region
cropped <- rgrass::read_RAST('madElev', flags='quiet')

# plot: larger raster has been cropped!
plot(madElev, col=paste0('gray', 0:80), main='Cropped', legend=FALSE)
plot(cropped, add=TRUE)

### resize region using user-defined coordinates
extent <- c(740000, 750000, 1060000, 1070000)
regionResize(extent)
fasterExtRegion()

# import the large raster using this region
cropped <- rgrass::read_RAST('madElev', flags='quiet')

# plot: larger raster has been cropped!
plot(madElev, col=paste0('gray', 0:80), main='Cropped', legend=FALSE)
plot(cropped, add=TRUE)

### resize region by growing by a certain number of cells
grow <- 200
regionResize() # first, expand region to encompass all objects
regionResize(grow) # now, grow
fasterExtRegion()

# import the large raster using this region
expanded <- rgrass::read_RAST('madElev', flags='quiet')

# plot: raster has been extended!
plot(expanded, main='Expanded')

# Revert back to original GRASS session.
# Change to your working location if not "default" (it usually is).
initGrass(location='default')

}
}
\seealso{
\code{\link{regionExt}}, \code{\link{regionDim}}, and \code{\link{regionRes}} in \pkg{fasterRaster}; \code{\link[terra]{ext}} in the \pkg{terra} package; \code{\link[sf]{st_bbox}} in the \pkg{sf} package; \code{GRASS} module \code{\href{https://grass.osgeo.org/grass82/manuals/g.region.html}{g.region}}
}
